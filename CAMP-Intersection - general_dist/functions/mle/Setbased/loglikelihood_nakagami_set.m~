function [loss] = loglikelihood_nakagami_set(params_mu_omega,data,per_rate,current_index,min_samples_per_cell)
%LOGLIKELIHOOD Summary of this function goes here
pdf_nak_estimated = makedist('Nakagami','mu',params_mu_omega(1),'omega',params_mu_omega(2));
ll_list = zeros(1,length(data));
samples_per_cell = funoncellarray1input(data,@length);
samples_per_cell(isnan(samples_per_cell))=0;
per_center = per_rate(current_index);
data_center = data{current_index};

for i =1:length(data)
%     if length(data{i})<min_samples_per_cell
%         continue;
%     end
    if length(data{i})==0
        per_rate(i)=0;
        continue;
    end
    data_scaled =data{i};
    current_per = per_rate(i);
    if length(data_center)>min_samples_per_cell
        if current_per<per_center
            data_percentile = (per_center - current_per)*(1-current_per);
            data_scaled_thresh = prctile(data_scaled,data_percentile*100);
            data_scaled_prctile = data_scaled(data_scaled>data_scaled_thresh);
            data_scaled = data_scaled*std(data_center)./std(data_scaled_prctile);

        elseif current_per>per_center
            data_percentile = (current_per-per_center)*(1-per_center);
            data_scaled_thresh = prctile(data_center,data_percentile*100);
            data_center_prctile = data_center(data_center>data_scaled_thresh);
            data_scaled = data_scaled*std(data_center_prctile)./std(data_scaled);
        end
    end
    model_pdf_trunc_val = icdf(pdf_nak_estimated,per_rate(i));
    model_pdf_samples = pdf(pdf_nak_estimated,data_scaled);
    model_pdf_samples = model_pdf_samples*(1/(1-per_rate(i)));
    model_pdf_samples(model_pdf_samples<eps)=eps;
    model_pdf_samples(data_scaled<model_pdf_trunc_val)=1e-200;
    red_data = data_scaled(data_scaled<model_pdf_trunc_val);
    if per_rate(i)~=0
        distance_loss = sum(((log(red_data)-log(model_pdf_trunc_val))*length(red_data)./length(data)).^2);
    else
        distance_loss=0;
    end
    % min_dist = abs(min_data - model_pdf_trunc_val).^2;
    ll_list(i) = -mean(log2(model_pdf_samples));
    ll_list(i) = ll_list(i)+distance_loss;    
end

loss = mean(ll_list.*(samples_per_cell./(1-per_rate'))./sum((samples_per_cell./(1-per_rate'))));

% loss = mean(ll_list.*(samples_per_cell)./sum(samples_per_cell));
if isnan(loss)||loss==inf||loss==-inf
    loss
end
end

